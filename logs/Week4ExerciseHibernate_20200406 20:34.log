[DEBUG] 2020-04-06 20:32:17.299 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-04-06 20:32:17.349 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-04-06 20:32:17.404 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-04-06 20:32:19.497 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-04-06 20:32:19.565 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-04-06 20:32:23.633 [http-nio-8080-exec-3] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-04-06 20:32:23.671 [http-nio-8080-exec-3] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-04-06 20:32:24.753 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-04-06 20:32:35.579 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-04-06 20:32:36.909 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-04-06 20:32:36.978 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-04-06 20:32:37.856 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-04-06 20:32:39.259 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@58b2ccbb
[DEBUG] 2020-04-06 20:32:39.263 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@58b2ccbb
[DEBUG] 2020-04-06 20:32:39.276 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@58b2ccbb
[DEBUG] 2020-04-06 20:32:39.291 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e625f8c
[DEBUG] 2020-04-06 20:32:39.307 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@52c44257
[DEBUG] 2020-04-06 20:32:39.340 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b0f335c
[DEBUG] 2020-04-06 20:32:39.384 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2f2704ca
[DEBUG] 2020-04-06 20:32:39.392 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2f2704ca
[DEBUG] 2020-04-06 20:32:39.394 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2f2704ca
[DEBUG] 2020-04-06 20:32:39.450 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@47191e7c
[DEBUG] 2020-04-06 20:32:39.454 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@47191e7c
[DEBUG] 2020-04-06 20:32:39.454 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47191e7c
[DEBUG] 2020-04-06 20:32:39.503 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@59ae6fdd
[DEBUG] 2020-04-06 20:32:39.511 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@59ae6fdd
[DEBUG] 2020-04-06 20:32:39.522 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59ae6fdd
[DEBUG] 2020-04-06 20:32:39.557 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1e59ce8d
[DEBUG] 2020-04-06 20:32:39.559 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1e59ce8d
[DEBUG] 2020-04-06 20:32:39.567 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e59ce8d
[DEBUG] 2020-04-06 20:32:39.601 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b926ff2
[DEBUG] 2020-04-06 20:32:39.608 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b926ff2
[DEBUG] 2020-04-06 20:32:39.626 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2b926ff2
[DEBUG] 2020-04-06 20:32:39.658 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75462888
[DEBUG] 2020-04-06 20:32:39.659 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75462888
[DEBUG] 2020-04-06 20:32:39.663 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75462888
[DEBUG] 2020-04-06 20:32:39.707 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@658c2473
[DEBUG] 2020-04-06 20:32:39.719 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@658c2473
[DEBUG] 2020-04-06 20:32:39.729 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@658c2473
[DEBUG] 2020-04-06 20:32:39.784 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d59f971
[DEBUG] 2020-04-06 20:32:39.825 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d59f971
[DEBUG] 2020-04-06 20:32:39.891 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64a04c86
[DEBUG] 2020-04-06 20:32:39.892 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64a04c86
[DEBUG] 2020-04-06 20:32:39.926 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b77a6e7
[DEBUG] 2020-04-06 20:32:39.931 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b77a6e7
[DEBUG] 2020-04-06 20:32:39.955 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6c6f7894
[DEBUG] 2020-04-06 20:32:39.980 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65c81da9
[DEBUG] 2020-04-06 20:32:40.032 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7a514688
[DEBUG] 2020-04-06 20:32:40.041 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a514688
[DEBUG] 2020-04-06 20:32:40.085 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4d4914c6
[DEBUG] 2020-04-06 20:32:40.086 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4d4914c6
[DEBUG] 2020-04-06 20:32:40.277 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@550b8b0f
[DEBUG] 2020-04-06 20:32:40.286 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@550b8b0f
[DEBUG] 2020-04-06 20:32:40.341 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14359ae4
[DEBUG] 2020-04-06 20:32:40.342 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14359ae4
[DEBUG] 2020-04-06 20:32:40.384 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@12056d29
[DEBUG] 2020-04-06 20:32:40.385 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@12056d29
[DEBUG] 2020-04-06 20:32:40.459 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6f59641e
[DEBUG] 2020-04-06 20:32:40.465 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6f59641e
[DEBUG] 2020-04-06 20:32:40.587 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7604c160
[DEBUG] 2020-04-06 20:32:40.614 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7604c160
[DEBUG] 2020-04-06 20:32:40.700 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@466c591b
[DEBUG] 2020-04-06 20:32:40.701 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@466c591b
[DEBUG] 2020-04-06 20:32:40.748 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ee23af1
[DEBUG] 2020-04-06 20:32:40.752 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ee23af1
[DEBUG] 2020-04-06 20:32:40.779 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@36352d30
[DEBUG] 2020-04-06 20:32:40.780 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36352d30
[DEBUG] 2020-04-06 20:32:40.814 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@629c8694
[DEBUG] 2020-04-06 20:32:40.819 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@629c8694
[DEBUG] 2020-04-06 20:32:40.839 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@705cca2b
[DEBUG] 2020-04-06 20:32:40.840 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@705cca2b
[DEBUG] 2020-04-06 20:32:40.862 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@705cca2b
[DEBUG] 2020-04-06 20:32:40.900 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@74cbaf61
[DEBUG] 2020-04-06 20:32:40.918 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7b7549f
[DEBUG] 2020-04-06 20:32:40.922 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b7549f
[DEBUG] 2020-04-06 20:32:40.931 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b7549f
[DEBUG] 2020-04-06 20:32:40.956 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@706d1976
[DEBUG] 2020-04-06 20:32:40.969 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@79815a49
[DEBUG] 2020-04-06 20:32:40.969 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79815a49
[DEBUG] 2020-04-06 20:32:41.008 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@79538d37
[DEBUG] 2020-04-06 20:32:41.035 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@79538d37
[DEBUG] 2020-04-06 20:32:41.090 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@537cabe8
[DEBUG] 2020-04-06 20:32:41.099 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@537cabe8
[DEBUG] 2020-04-06 20:32:41.151 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@b646d94
[DEBUG] 2020-04-06 20:32:41.158 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b646d94
[DEBUG] 2020-04-06 20:32:41.210 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@61cb8113
[DEBUG] 2020-04-06 20:32:41.221 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@61cb8113
[DEBUG] 2020-04-06 20:32:41.253 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7708cc94
[DEBUG] 2020-04-06 20:32:41.329 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@17ef0602
[DEBUG] 2020-04-06 20:32:41.349 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@17ef0602
[DEBUG] 2020-04-06 20:32:41.358 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@17ef0602
[DEBUG] 2020-04-06 20:32:41.406 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14af57bf
[DEBUG] 2020-04-06 20:32:41.418 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14af57bf
[DEBUG] 2020-04-06 20:32:41.437 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14af57bf
[DEBUG] 2020-04-06 20:32:41.484 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@656a7477
[DEBUG] 2020-04-06 20:32:41.524 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@c1d7959
[DEBUG] 2020-04-06 20:32:41.568 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@323b9fd4
[DEBUG] 2020-04-06 20:32:41.579 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@323b9fd4
[DEBUG] 2020-04-06 20:32:41.579 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@323b9fd4
[DEBUG] 2020-04-06 20:32:41.654 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38dbc3e2
[DEBUG] 2020-04-06 20:32:41.655 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38dbc3e2
[DEBUG] 2020-04-06 20:32:41.655 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38dbc3e2
[DEBUG] 2020-04-06 20:32:41.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2ca18bca
[DEBUG] 2020-04-06 20:32:41.701 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5312ec29
[DEBUG] 2020-04-06 20:32:41.791 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@35b7fe1
[DEBUG] 2020-04-06 20:32:41.808 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35b7fe1
[DEBUG] 2020-04-06 20:32:41.827 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@236f9d4c
[DEBUG] 2020-04-06 20:32:41.898 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3ba93987
[DEBUG] 2020-04-06 20:32:41.899 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3ba93987
[DEBUG] 2020-04-06 20:32:42.011 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@78b62426
[DEBUG] 2020-04-06 20:32:42.022 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@78b62426
[DEBUG] 2020-04-06 20:32:42.043 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a719c8d
[DEBUG] 2020-04-06 20:32:42.057 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f31be01
[DEBUG] 2020-04-06 20:32:42.143 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@237de0b5
[DEBUG] 2020-04-06 20:32:42.308 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2271b116
[DEBUG] 2020-04-06 20:32:42.328 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2271b116
[DEBUG] 2020-04-06 20:32:42.357 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79bec2b5
[DEBUG] 2020-04-06 20:32:42.362 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b3d4da7
[DEBUG] 2020-04-06 20:32:42.370 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@577b9048
[DEBUG] 2020-04-06 20:32:42.392 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4007a900
[DEBUG] 2020-04-06 20:32:42.402 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f2370df
[DEBUG] 2020-04-06 20:32:42.428 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e425ce9
[DEBUG] 2020-04-06 20:32:42.428 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@75307ab9
[DEBUG] 2020-04-06 20:32:42.428 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@88282b6
[DEBUG] 2020-04-06 20:32:44.216 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-04-06 20:32:44.240 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-04-06 20:32:44.287 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-06 20:32:44.301 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-06 20:32:44.335 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-04-06 20:32:44.395 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-04-06 20:32:44.411 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-04-06 20:32:44.500 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-06 20:32:44.540 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-04-06 20:32:44.575 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-04-06 20:32:44.593 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-04-06 20:32:44.624 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-04-06 20:32:44.631 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-06 20:32:44.670 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-04-06 20:32:44.953 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookSeller
[INFO ] 2020-04-06 20:32:44.955 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-04-06 20:32:44.974 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-04-06 20:32:52.693 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-04-06 20:33:06.510 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-04-06 20:33:06.589 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-04-06 20:33:06.603 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-04-06 20:33:08.028 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-04-06 20:33:08.922 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-04-06 20:33:09.811 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-04-06 20:33:11.251 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-04-06 20:33:11.481 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30f84c5f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3135f2a8]
[DEBUG] 2020-04-06 20:33:14.254 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Book
[DEBUG] 2020-04-06 20:33:14.946 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-06 20:33:15.314 [http-nio-8080-exec-3] EntityBinder - Import with entity name Book
[DEBUG] 2020-04-06 20:33:15.443 [http-nio-8080-exec-3] EntityBinder - Bind entity edu.matc.entity.Book on table book
[DEBUG] 2020-04-06 20:33:16.969 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:17.180 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-06 20:33:17.274 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Book:id]
[DEBUG] 2020-04-06 20:33:17.416 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-06 20:33:17.563 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2020-04-06 20:33:17.772 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-06 20:33:17.880 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-06 20:33:17.885 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:18.009 [http-nio-8080-exec-3] PropertyBinder - Building property author
[DEBUG] 2020-04-06 20:33:18.040 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:18.044 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2020-04-06 20:33:18.053 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Book:isbn]
[DEBUG] 2020-04-06 20:33:18.065 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2020-04-06 20:33:18.068 [http-nio-8080-exec-3] PropertyBinder - Building property isbn
[DEBUG] 2020-04-06 20:33:18.077 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=publication_year, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:18.102 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property publicationYear with lazy=false
[DEBUG] 2020-04-06 20:33:18.113 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Book:publicationYear]
[DEBUG] 2020-04-06 20:33:18.124 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for publicationYear
[DEBUG] 2020-04-06 20:33:18.142 [http-nio-8080-exec-3] PropertyBinder - Building property publicationYear
[DEBUG] 2020-04-06 20:33:18.160 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:18.170 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-06 20:33:18.178 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Book:title]
[DEBUG] 2020-04-06 20:33:18.203 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-06 20:33:18.210 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-04-06 20:33:18.266 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Author
[DEBUG] 2020-04-06 20:33:18.275 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-06 20:33:18.277 [http-nio-8080-exec-3] EntityBinder - Import with entity name Author
[DEBUG] 2020-04-06 20:33:18.289 [http-nio-8080-exec-3] EntityBinder - Bind entity edu.matc.entity.Author on table author
[DEBUG] 2020-04-06 20:33:18.542 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:18.552 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-06 20:33:18.573 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Author:id]
[DEBUG] 2020-04-06 20:33:18.579 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-06 20:33:18.583 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2020-04-06 20:33:18.599 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-06 20:33:18.622 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2020-04-06 20:33:18.627 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:18.728 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:19.212 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:19.255 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:19.296 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-06 20:33:19.352 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2020-04-06 20:33:19.359 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2020-04-06 20:33:19.371 [http-nio-8080-exec-3] CollectionBinder - Collection role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:33:19.482 [http-nio-8080-exec-3] PropertyBinder - Building property books
[DEBUG] 2020-04-06 20:33:19.546 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:19.549 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-04-06 20:33:19.558 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Author:firstName]
[DEBUG] 2020-04-06 20:33:19.569 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-04-06 20:33:19.571 [http-nio-8080-exec-3] PropertyBinder - Building property firstName
[DEBUG] 2020-04-06 20:33:19.584 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:33:19.585 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-04-06 20:33:19.585 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Author:lastName]
[DEBUG] 2020-04-06 20:33:19.602 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-04-06 20:33:19.605 [http-nio-8080-exec-3] PropertyBinder - Building property lastName
[DEBUG] 2020-04-06 20:33:19.665 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-06 20:33:19.668 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2020-04-06 20:33:19.679 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for publicationYear
[DEBUG] 2020-04-06 20:33:19.686 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-06 20:33:19.691 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-06 20:33:19.692 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-04-06 20:33:19.692 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-04-06 20:33:19.868 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2020-04-06 20:33:19.874 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2020-04-06 20:33:19.875 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:33:19.885 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: edu.matc.entity.Author.books through a foreign key
[DEBUG] 2020-04-06 20:33:19.907 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: edu.matc.entity.Author.books -> book
[DEBUG] 2020-04-06 20:33:19.938 [http-nio-8080-exec-3] TableBinder - Retrieving property edu.matc.entity.Book.author
[DEBUG] 2020-04-06 20:33:19.939 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: author_id, one-to-many: edu.matc.entity.Book
[DEBUG] 2020-04-06 20:33:19.939 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.Author
[DEBUG] 2020-04-06 20:33:20.070 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.Author
[DEBUG] 2020-04-06 20:33:21.368 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2020-04-06 20:33:21.391 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2020-04-06 20:33:21.407 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-04-06 20:33:21.407 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-04-06 20:33:21.407 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2020-04-06 20:33:21.407 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-04-06 20:33:21.407 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2020-04-06 20:33:21.407 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-04-06 20:33:21.407 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-04-06 20:33:21.415 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-04-06 20:33:21.429 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2020-04-06 20:33:21.429 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-04-06 20:33:21.429 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2020-04-06 20:33:21.430 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-04-06 20:33:21.436 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-04-06 20:33:21.439 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-04-06 20:33:21.444 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-04-06 20:33:21.444 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2020-04-06 20:33:21.444 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2020-04-06 20:33:21.444 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2020-04-06 20:33:21.444 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2020-04-06 20:33:21.451 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2020-04-06 20:33:21.465 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2020-04-06 20:33:21.465 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-04-06 20:33:21.465 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-04-06 20:33:21.465 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-04-06 20:33:21.465 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-04-06 20:33:21.471 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2020-04-06 20:33:21.475 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-04-06 20:33:21.494 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2020-04-06 20:33:21.495 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2020-04-06 20:33:21.495 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-04-06 20:33:21.528 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2020-04-06 20:33:21.528 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-04-06 20:33:21.528 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-04-06 20:33:21.528 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2020-04-06 20:33:21.529 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-04-06 20:33:21.539 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2020-04-06 20:33:21.542 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2020-04-06 20:33:24.417 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-04-06 20:33:25.576 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-04-06 20:33:25.583 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-45-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookSeller, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3dfa51a5, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookSeller, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-04-06 20:33:26.394 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Author] is safe
[DEBUG] 2020-04-06 20:33:26.402 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Author
[DEBUG] 2020-04-06 20:33:27.192 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Book] is safe
[DEBUG] 2020-04-06 20:33:27.206 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Book
[DEBUG] 2020-04-06 20:33:27.309 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-04-06 20:33:27.367 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-04-06 20:33:27.374 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30f84c5f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1c088240]
[DEBUG] 2020-04-06 20:33:29.424 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Author] is safe
[DEBUG] 2020-04-06 20:33:29.438 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Author
[DEBUG] 2020-04-06 20:33:30.653 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Author] is safe
[DEBUG] 2020-04-06 20:33:30.676 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Author
[DEBUG] 2020-04-06 20:33:38.640 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Book] is safe
[DEBUG] 2020-04-06 20:33:38.647 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Book
[DEBUG] 2020-04-06 20:33:38.662 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Book] is safe
[DEBUG] 2020-04-06 20:33:38.663 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Book
[DEBUG] 2020-04-06 20:33:39.793 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:33:39.797 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2020-04-06 20:33:39.797 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2020-04-06 20:33:39.798 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2020-04-06 20:33:39.798 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2020-04-06 20:33:39.862 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Author
[DEBUG] 2020-04-06 20:33:39.886 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2020-04-06 20:33:39.887 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select author_.id, author_.first_name as first_na2_0_, author_.last_name as last_nam3_0_ from author author_ where author_.id=?
[DEBUG] 2020-04-06 20:33:39.887 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into author (first_name, last_name, id) values (?, ?, ?)
[DEBUG] 2020-04-06 20:33:39.887 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update author set first_name=?, last_name=? where id=?
[DEBUG] 2020-04-06 20:33:39.887 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2020-04-06 20:33:39.887 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2020-04-06 20:33:40.894 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77359c54]
[DEBUG] 2020-04-06 20:33:40.953 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2020-04-06 20:33:41.109 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4875508f]
[DEBUG] 2020-04-06 20:33:41.144 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24608339]
[DEBUG] 2020-04-06 20:33:41.171 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2020-04-06 20:33:41.173 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2020-04-06 20:33:41.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2020-04-06 20:33:41.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books.publicationYear
[DEBUG] 2020-04-06 20:33:41.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2020-04-06 20:33:41.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-06 20:33:41.206 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-06 20:33:41.207 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:33:41.571 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:33:41.746 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Author)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Author, querySpaceUid=<gen:0>, path=edu.matc.entity.Author)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.Author.books, querySpaceUid=<gen:1>, path=edu.matc.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Book, querySpaceUid=<gen:2>, path=edu.matc.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2020-04-06 20:33:41.791 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.matc.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:33:41.809 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62602ba]
[DEBUG] 2020-04-06 20:33:41.814 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2020-04-06 20:33:41.815 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55284b36]
[DEBUG] 2020-04-06 20:33:41.815 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d822f07]
[DEBUG] 2020-04-06 20:33:41.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2020-04-06 20:33:41.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2020-04-06 20:33:41.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2020-04-06 20:33:41.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books.publicationYear
[DEBUG] 2020-04-06 20:33:41.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2020-04-06 20:33:41.818 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-06 20:33:41.819 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-06 20:33:41.819 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:33:41.820 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:33:41.823 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Author)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Author, querySpaceUid=<gen:0>, path=edu.matc.entity.Author)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.Author.books, querySpaceUid=<gen:1>, path=edu.matc.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Book, querySpaceUid=<gen:2>, path=edu.matc.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2020-04-06 20:33:41.824 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.matc.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:33:42.192 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Author: select author0_.id as id1_0_1_, author0_.first_name as first_na2_0_1_, author0_.last_name as last_nam3_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.isbn as isbn2_1_0_, books1_.publication_year as publicat3_1_0_, books1_.title as title4_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:33:42.210 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Author: select author0_.id as id1_0_1_, author0_.first_name as first_na2_0_1_, author0_.last_name as last_nam3_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.isbn as isbn2_1_0_, books1_.publication_year as publicat3_1_0_, books1_.title as title4_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:33:42.213 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Book
[DEBUG] 2020-04-06 20:33:42.213 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2020-04-06 20:33:42.213 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.isbn as isbn2_1_, book_.publication_year as publicat3_1_, book_.title as title4_1_ from book book_ where book_.id=?
[DEBUG] 2020-04-06 20:33:42.213 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into book (author_id, isbn, publication_year, title, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-04-06 20:33:42.213 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update book set author_id=?, isbn=?, publication_year=?, title=? where id=?
[DEBUG] 2020-04-06 20:33:42.214 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2020-04-06 20:33:42.214 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into book (author_id, isbn, publication_year, title) values (?, ?, ?, ?)
[DEBUG] 2020-04-06 20:33:42.214 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6091d32d]
[DEBUG] 2020-04-06 20:33:42.216 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-06 20:33:42.217 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c7ad820]
[DEBUG] 2020-04-06 20:33:42.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2020-04-06 20:33:42.227 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2020-04-06 20:33:42.227 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2020-04-06 20:33:42.227 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2020-04-06 20:33:42.227 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2020-04-06 20:33:42.227 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationYear
[DEBUG] 2020-04-06 20:33:42.227 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-06 20:33:42.235 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:33:42.238 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:33:42.247 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Book)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Book, querySpaceUid=<gen:0>, path=edu.matc.entity.Book)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.Author, querySpaceUid=<gen:1>, path=edu.matc.entity.Book.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-04-06 20:33:42.247 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.matc.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id where book0_.id=?
[DEBUG] 2020-04-06 20:33:42.250 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5828f7fa]
[DEBUG] 2020-04-06 20:33:42.250 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-06 20:33:42.251 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39eed6ab]
[DEBUG] 2020-04-06 20:33:42.251 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2020-04-06 20:33:42.251 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2020-04-06 20:33:42.251 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2020-04-06 20:33:42.257 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2020-04-06 20:33:42.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2020-04-06 20:33:42.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationYear
[DEBUG] 2020-04-06 20:33:42.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-06 20:33:42.271 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:33:42.283 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:33:42.307 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Book)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Book, querySpaceUid=<gen:0>, path=edu.matc.entity.Book)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.Author, querySpaceUid=<gen:1>, path=edu.matc.entity.Book.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-04-06 20:33:42.309 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.matc.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id where book0_.id=?
[DEBUG] 2020-04-06 20:33:42.320 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2020-04-06 20:33:42.330 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2020-04-06 20:33:42.473 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33204fb9]
[DEBUG] 2020-04-06 20:33:42.476 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8ca91e]
[DEBUG] 2020-04-06 20:33:42.476 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-06 20:33:42.476 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2020-04-06 20:33:42.476 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2020-04-06 20:33:42.497 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationYear
[DEBUG] 2020-04-06 20:33:42.500 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-06 20:33:42.505 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:33:42.582 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:33:42.599 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.Author.books, querySpaceUid=<gen:0>, path=[edu.matc.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Book, querySpaceUid=<gen:1>, path=[edu.matc.entity.Author.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-04-06 20:33:42.614 [http-nio-8080-exec-3] CollectionLoader - Static select for collection edu.matc.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:33:44.306 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-04-06 20:33:44.339 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-04-06 20:33:44.372 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-04-06 20:33:44.991 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-04-06 20:33:44.997 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-04-06 20:33:45.045 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-04-06 20:33:45.046 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-04-06 20:33:45.138 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2a950a02
[DEBUG] 2020-04-06 20:33:45.191 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: cb664e9d-2417-4921-8f24-f78d0c4c4f39 (<unnamed>)
[DEBUG] 2020-04-06 20:33:45.204 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-04-06 20:33:55.402 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-04-06 20:33:56.923 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2020-04-06 20:33:57.694 [http-nio-8080-exec-3] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@746d7b00
[DEBUG] 2020-04-06 20:33:58.618 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Author as generatedAlias0
[DEBUG] 2020-04-06 20:33:58.740 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:33:58.919 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-04-06 20:33:59.539 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-06 20:34:00.129 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : edu.matc.entity.Author (generatedAlias0) -> author0_
[DEBUG] 2020-04-06 20:34:00.161 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2020-04-06 20:34:00.217 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-06 20:34:00.229 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) )
[DEBUG] 2020-04-06 20:34:00.568 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2020-04-06 20:34:00.574 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-06 20:34:00.593 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=edu.matc.entity.Author}}

[DEBUG] 2020-04-06 20:34:00.608 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:34:00.813 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Author as generatedAlias0
[DEBUG] 2020-04-06 20:34:00.822 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2020-04-06 20:34:00.823 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:34:01.385 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2020-04-06 20:34:01.971 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-04-06 20:34:02.040 [http-nio-8080-exec-3] Loader - Result row: EntityKey[edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:34:02.272 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2020-04-06 20:34:02.278 [http-nio-8080-exec-3] Loader - Result row: EntityKey[edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:34:02.285 [http-nio-8080-exec-3] Loader - Result set row: 2
[DEBUG] 2020-04-06 20:34:02.290 [http-nio-8080-exec-3] Loader - Result row: EntityKey[edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:34:02.326 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:34:02.350 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:34:02.351 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.621 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:34:02.634 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.635 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:34:02.635 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.675 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:34:02.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:34:02.677 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.677 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Joseph
[DEBUG] 2020-04-06 20:34:02.677 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.677 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Ottinger
[DEBUG] 2020-04-06 20:34:02.677 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:02.677 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:34:02.757 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:34:02.778 [http-nio-8080-exec-3] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:34:02.893 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:34:03.148 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:03.154 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:34:03.155 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:03.156 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:34:03.156 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:34:03.186 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:03.189 [http-nio-8080-exec-3] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:34:03.261 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:03.275 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:34:03.349 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:03.523 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:34:03.531 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:34:03.532 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.537 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:34:03.537 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.537 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:34:03.537 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.537 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:34:03.548 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.561 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:34:03.567 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:03.594 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:03.598 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:03.605 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:34:03.605 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:34:03.614 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:03.615 [http-nio-8080-exec-3] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:34:03.681 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:03.698 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:34:03.718 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:03.731 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:34:03.745 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:03.746 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:34:03.755 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:34:03.758 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.761 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:34:03.762 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.772 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:34:03.773 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.778 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:34:03.778 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.779 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:34:03.791 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:34:03.796 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:34:03.799 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.803 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:34:03.803 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.803 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:34:03.803 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.812 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:34:03.820 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:03.820 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:34:03.821 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:03.821 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:03.821 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:03.821 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:34:03.821 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:34:03.873 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:34:33.315 [http-nio-8080-exec-6] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2020-04-06 20:34:33.328 [http-nio-8080-exec-6] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Book as generatedAlias0
[DEBUG] 2020-04-06 20:34:33.346 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:34:33.354 [http-nio-8080-exec-6] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-04-06 20:34:33.360 [http-nio-8080-exec-6] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-06 20:34:33.361 [http-nio-8080-exec-6] FromElement - FromClause{level=1} : edu.matc.entity.Book (generatedAlias0) -> book0_
[DEBUG] 2020-04-06 20:34:33.363 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2020-04-06 20:34:33.364 [http-nio-8080-exec-6] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-06 20:34:33.364 [http-nio-8080-exec-6] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) )
[DEBUG] 2020-04-06 20:34:33.364 [http-nio-8080-exec-6] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2020-04-06 20:34:33.365 [http-nio-8080-exec-6] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-06 20:34:33.365 [http-nio-8080-exec-6] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=edu.matc.entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i5_1_, book0_.isbn as isbn2_1_, book0_.publication_year as publicat3_1_, book0_.title as title4_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=edu.matc.entity.Book}}

[DEBUG] 2020-04-06 20:34:33.365 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:34:33.365 [http-nio-8080-exec-6] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Book as generatedAlias0
[DEBUG] 2020-04-06 20:34:33.365 [http-nio-8080-exec-6] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.isbn as isbn2_1_, book0_.publication_year as publicat3_1_, book0_.title as title4_1_ from book book0_
[DEBUG] 2020-04-06 20:34:33.383 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:34:33.398 [http-nio-8080-exec-6] SQL - select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.isbn as isbn2_1_, book0_.publication_year as publicat3_1_, book0_.title as title4_1_ from book book0_
[DEBUG] 2020-04-06 20:34:33.437 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-04-06 20:34:33.445 [http-nio-8080-exec-6] Loader - Result row: EntityKey[edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:34:33.446 [http-nio-8080-exec-6] Loader - Result set row: 1
[DEBUG] 2020-04-06 20:34:33.446 [http-nio-8080-exec-6] Loader - Result row: EntityKey[edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:34:33.446 [http-nio-8080-exec-6] Loader - Result set row: 2
[DEBUG] 2020-04-06 20:34:33.451 [http-nio-8080-exec-6] Loader - Result row: EntityKey[edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:34:33.452 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:34:33.452 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:34:33.452 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.452 [http-nio-8080-exec-6] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:34:33.482 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:34:33.485 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:34:33.500 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:33.501 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:34:33.505 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:34:33.506 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:33.507 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:34:33.507 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:34:33.507 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.516 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:34:33.517 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.517 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:34:33.517 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.517 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:34:33.518 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:33.518 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:33.518 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:33.533 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:34:33.535 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#1
[DEBUG] 2020-04-06 20:34:33.535 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:34:33.535 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.535 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:34:33.537 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.537 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:34:33.537 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.538 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:34:33.538 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:34:33.539 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:34:33.539 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:34:33.540 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:34:33.541 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.541 [http-nio-8080-exec-6] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:34:33.568 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:34:33.571 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:34:33.572 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:33.572 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:34:33.572 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:34:33.572 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.572 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:34:33.572 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.572 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:34:33.572 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.573 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:34:33.573 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:33.573 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:33.573 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:33.573 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:34:33.573 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#2
[DEBUG] 2020-04-06 20:34:33.574 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:34:33.574 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.574 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:34:33.574 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.574 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:34:33.575 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:33.575 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:34:33.575 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:34:39.736 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2020-04-06 20:34:39.750 [http-nio-8080-exec-7] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2020-04-06 20:34:39.775 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-04-06 20:34:39.776 [http-nio-8080-exec-7] Loader - Result row: EntityKey[edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:34:39.794 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2020-04-06 20:34:39.795 [http-nio-8080-exec-7] Loader - Result row: EntityKey[edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:34:39.795 [http-nio-8080-exec-7] Loader - Result set row: 2
[DEBUG] 2020-04-06 20:34:39.795 [http-nio-8080-exec-7] Loader - Result row: EntityKey[edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:34:39.795 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:34:39.795 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:34:39.795 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.813 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:34:39.815 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.818 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:34:39.819 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.825 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:34:39.825 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:34:39.825 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:34:39.825 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.826 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Joseph
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Ottinger
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.827 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:34:39.828 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:34:39.828 [http-nio-8080-exec-7] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:34:39.864 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:34:39.864 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:39.864 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:34:39.865 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:39.865 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:34:39.878 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:34:39.879 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:39.882 [http-nio-8080-exec-7] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:34:39.892 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:39.899 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:34:39.910 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:39.918 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:34:39.919 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:34:39.919 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.919 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:34:39.919 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.919 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:34:39.919 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.919 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:34:39.919 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:39.930 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:34:39.931 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:39.936 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:34:39.936 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:39.937 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:34:39.940 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:34:39.941 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:39.941 [http-nio-8080-exec-7] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:34:39.958 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:39.959 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:34:39.990 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:39.998 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:34:40.000 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:40.001 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:34:40.001 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:34:40.001 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:40.005 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:34:40.011 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:40.011 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:34:40.011 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:40.011 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:34:40.012 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:40.024 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:34:40.031 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:34:40.031 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:34:40.031 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:40.031 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:34:40.031 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:40.031 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:34:40.032 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:40.036 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:34:40.036 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:34:40.037 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:34:40.037 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:40.037 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:34:40.037 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:34:40.037 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:34:40.056 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:34:40.056 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
