[DEBUG] 2020-04-06 20:40:56.844 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-04-06 20:40:56.916 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-04-06 20:40:56.995 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-04-06 20:40:58.218 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-04-06 20:40:58.262 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-04-06 20:41:00.962 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-04-06 20:41:00.964 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-04-06 20:41:01.441 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-04-06 20:41:06.118 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-04-06 20:41:06.578 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-04-06 20:41:06.599 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-04-06 20:41:06.877 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-04-06 20:41:07.196 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@71a4c8f1
[DEBUG] 2020-04-06 20:41:07.197 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@71a4c8f1
[DEBUG] 2020-04-06 20:41:07.211 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71a4c8f1
[DEBUG] 2020-04-06 20:41:07.215 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eac4908
[DEBUG] 2020-04-06 20:41:07.218 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2fa604e2
[DEBUG] 2020-04-06 20:41:07.229 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@544a951
[DEBUG] 2020-04-06 20:41:07.242 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@50c05bda
[DEBUG] 2020-04-06 20:41:07.242 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@50c05bda
[DEBUG] 2020-04-06 20:41:07.242 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@50c05bda
[DEBUG] 2020-04-06 20:41:07.245 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e809ff6
[DEBUG] 2020-04-06 20:41:07.251 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e809ff6
[DEBUG] 2020-04-06 20:41:07.251 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e809ff6
[DEBUG] 2020-04-06 20:41:07.284 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6d76f70e
[DEBUG] 2020-04-06 20:41:07.287 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6d76f70e
[DEBUG] 2020-04-06 20:41:07.288 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6d76f70e
[DEBUG] 2020-04-06 20:41:07.293 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@58e2ef0e
[DEBUG] 2020-04-06 20:41:07.293 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@58e2ef0e
[DEBUG] 2020-04-06 20:41:07.294 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58e2ef0e
[DEBUG] 2020-04-06 20:41:07.297 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5d12d2b5
[DEBUG] 2020-04-06 20:41:07.299 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5d12d2b5
[DEBUG] 2020-04-06 20:41:07.299 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5d12d2b5
[DEBUG] 2020-04-06 20:41:07.320 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@527c3418
[DEBUG] 2020-04-06 20:41:07.321 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@527c3418
[DEBUG] 2020-04-06 20:41:07.335 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@527c3418
[DEBUG] 2020-04-06 20:41:07.364 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c914cd7
[DEBUG] 2020-04-06 20:41:07.364 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c914cd7
[DEBUG] 2020-04-06 20:41:07.365 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c914cd7
[DEBUG] 2020-04-06 20:41:07.374 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7c93ba24
[DEBUG] 2020-04-06 20:41:07.376 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7c93ba24
[DEBUG] 2020-04-06 20:41:07.378 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ea45284
[DEBUG] 2020-04-06 20:41:07.379 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ea45284
[DEBUG] 2020-04-06 20:41:07.382 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@59097a4c
[DEBUG] 2020-04-06 20:41:07.384 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@59097a4c
[DEBUG] 2020-04-06 20:41:07.401 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@358165a1
[DEBUG] 2020-04-06 20:41:07.404 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d8f0208
[DEBUG] 2020-04-06 20:41:07.413 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1e0d2f5d
[DEBUG] 2020-04-06 20:41:07.415 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e0d2f5d
[DEBUG] 2020-04-06 20:41:07.421 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@243f878c
[DEBUG] 2020-04-06 20:41:07.421 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@243f878c
[DEBUG] 2020-04-06 20:41:07.471 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@591d901c
[DEBUG] 2020-04-06 20:41:07.478 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@591d901c
[DEBUG] 2020-04-06 20:41:07.492 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@a2d843d
[DEBUG] 2020-04-06 20:41:07.492 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@a2d843d
[DEBUG] 2020-04-06 20:41:07.495 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@707bb6a
[DEBUG] 2020-04-06 20:41:07.495 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@707bb6a
[DEBUG] 2020-04-06 20:41:07.502 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@49454b9d
[DEBUG] 2020-04-06 20:41:07.503 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@49454b9d
[DEBUG] 2020-04-06 20:41:07.522 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36e22dc0
[DEBUG] 2020-04-06 20:41:07.523 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36e22dc0
[DEBUG] 2020-04-06 20:41:07.528 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@23e8d1cb
[DEBUG] 2020-04-06 20:41:07.528 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@23e8d1cb
[DEBUG] 2020-04-06 20:41:07.542 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce24fa3
[DEBUG] 2020-04-06 20:41:07.551 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce24fa3
[DEBUG] 2020-04-06 20:41:07.560 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@388f44e9
[DEBUG] 2020-04-06 20:41:07.560 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@388f44e9
[DEBUG] 2020-04-06 20:41:07.565 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@41744113
[DEBUG] 2020-04-06 20:41:07.571 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@41744113
[DEBUG] 2020-04-06 20:41:07.581 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5f6f745e
[DEBUG] 2020-04-06 20:41:07.581 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f6f745e
[DEBUG] 2020-04-06 20:41:07.583 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f6f745e
[DEBUG] 2020-04-06 20:41:07.596 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f62a4b8
[DEBUG] 2020-04-06 20:41:07.600 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5b5a5bcb
[DEBUG] 2020-04-06 20:41:07.600 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b5a5bcb
[DEBUG] 2020-04-06 20:41:07.615 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b5a5bcb
[DEBUG] 2020-04-06 20:41:07.621 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@658de31e
[DEBUG] 2020-04-06 20:41:07.626 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@71ec81e7
[DEBUG] 2020-04-06 20:41:07.626 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71ec81e7
[DEBUG] 2020-04-06 20:41:07.630 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@16e65da0
[DEBUG] 2020-04-06 20:41:07.631 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@16e65da0
[DEBUG] 2020-04-06 20:41:07.635 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@493ca9ed
[DEBUG] 2020-04-06 20:41:07.642 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@493ca9ed
[DEBUG] 2020-04-06 20:41:07.647 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3fceb91d
[DEBUG] 2020-04-06 20:41:07.648 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3fceb91d
[DEBUG] 2020-04-06 20:41:07.657 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4ad8fb55
[DEBUG] 2020-04-06 20:41:07.658 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4ad8fb55
[DEBUG] 2020-04-06 20:41:07.660 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@10bfc32e
[DEBUG] 2020-04-06 20:41:07.666 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@51ee23cd
[DEBUG] 2020-04-06 20:41:07.666 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@51ee23cd
[DEBUG] 2020-04-06 20:41:07.666 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@51ee23cd
[DEBUG] 2020-04-06 20:41:07.685 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@208899ed
[DEBUG] 2020-04-06 20:41:07.686 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@208899ed
[DEBUG] 2020-04-06 20:41:07.686 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@208899ed
[DEBUG] 2020-04-06 20:41:07.689 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5cfb545c
[DEBUG] 2020-04-06 20:41:07.690 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5e7e1a5f
[DEBUG] 2020-04-06 20:41:07.696 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2483561f
[DEBUG] 2020-04-06 20:41:07.697 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2483561f
[DEBUG] 2020-04-06 20:41:07.697 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2483561f
[DEBUG] 2020-04-06 20:41:07.718 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f77df01
[DEBUG] 2020-04-06 20:41:07.719 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f77df01
[DEBUG] 2020-04-06 20:41:07.719 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f77df01
[DEBUG] 2020-04-06 20:41:07.724 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@715b2840
[DEBUG] 2020-04-06 20:41:07.729 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@74bc4300
[DEBUG] 2020-04-06 20:41:07.751 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2b99cea
[DEBUG] 2020-04-06 20:41:07.753 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b99cea
[DEBUG] 2020-04-06 20:41:07.773 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17ea57c8
[DEBUG] 2020-04-06 20:41:07.780 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5cbefdd4
[DEBUG] 2020-04-06 20:41:07.781 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5cbefdd4
[DEBUG] 2020-04-06 20:41:07.788 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@186bbe9a
[DEBUG] 2020-04-06 20:41:07.795 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@186bbe9a
[DEBUG] 2020-04-06 20:41:07.797 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6d26f8d6
[DEBUG] 2020-04-06 20:41:07.801 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@573d5e50
[DEBUG] 2020-04-06 20:41:07.841 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7e07123a
[DEBUG] 2020-04-06 20:41:07.852 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@242d33df
[DEBUG] 2020-04-06 20:41:07.853 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@242d33df
[DEBUG] 2020-04-06 20:41:07.870 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@606577f8
[DEBUG] 2020-04-06 20:41:07.871 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15299c5f
[DEBUG] 2020-04-06 20:41:07.871 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c1d5b62
[DEBUG] 2020-04-06 20:41:07.872 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19a16ddc
[DEBUG] 2020-04-06 20:41:07.872 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@52b013a7
[DEBUG] 2020-04-06 20:41:07.876 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b22b6ca
[DEBUG] 2020-04-06 20:41:07.876 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d623a87
[DEBUG] 2020-04-06 20:41:07.877 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f3f697a
[DEBUG] 2020-04-06 20:41:08.311 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-04-06 20:41:08.313 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-04-06 20:41:08.316 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-06 20:41:08.317 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-06 20:41:08.339 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-04-06 20:41:08.344 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-04-06 20:41:08.346 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-04-06 20:41:08.378 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-06 20:41:08.381 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-04-06 20:41:08.401 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-04-06 20:41:08.404 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-04-06 20:41:08.405 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-04-06 20:41:08.406 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-06 20:41:08.411 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-04-06 20:41:08.467 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookSeller
[INFO ] 2020-04-06 20:41:08.468 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-04-06 20:41:08.469 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-04-06 20:41:10.856 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-04-06 20:41:18.420 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-04-06 20:41:18.438 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-04-06 20:41:18.455 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-04-06 20:41:19.356 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-04-06 20:41:19.655 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-04-06 20:41:20.043 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-04-06 20:41:20.565 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-04-06 20:41:20.589 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10f460cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@327c01b0]
[DEBUG] 2020-04-06 20:41:21.132 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Book
[DEBUG] 2020-04-06 20:41:21.349 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-06 20:41:21.415 [http-nio-8080-exec-1] EntityBinder - Import with entity name Book
[DEBUG] 2020-04-06 20:41:21.521 [http-nio-8080-exec-1] EntityBinder - Bind entity edu.matc.entity.Book on table book
[DEBUG] 2020-04-06 20:41:21.812 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:21.868 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-06 20:41:21.883 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Book:id]
[DEBUG] 2020-04-06 20:41:21.907 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-06 20:41:21.930 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2020-04-06 20:41:21.985 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-06 20:41:22.003 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-06 20:41:22.004 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.036 [http-nio-8080-exec-1] PropertyBinder - Building property author
[DEBUG] 2020-04-06 20:41:22.037 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.037 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2020-04-06 20:41:22.037 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Book:isbn]
[DEBUG] 2020-04-06 20:41:22.037 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2020-04-06 20:41:22.038 [http-nio-8080-exec-1] PropertyBinder - Building property isbn
[DEBUG] 2020-04-06 20:41:22.044 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=publication_year, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.044 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property publicationYear with lazy=false
[DEBUG] 2020-04-06 20:41:22.045 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Book:publicationYear]
[DEBUG] 2020-04-06 20:41:22.058 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for publicationYear
[DEBUG] 2020-04-06 20:41:22.059 [http-nio-8080-exec-1] PropertyBinder - Building property publicationYear
[DEBUG] 2020-04-06 20:41:22.060 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.061 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-06 20:41:22.062 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Book:title]
[DEBUG] 2020-04-06 20:41:22.066 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-06 20:41:22.068 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-04-06 20:41:22.095 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Author
[DEBUG] 2020-04-06 20:41:22.096 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-06 20:41:22.096 [http-nio-8080-exec-1] EntityBinder - Import with entity name Author
[DEBUG] 2020-04-06 20:41:22.097 [http-nio-8080-exec-1] EntityBinder - Bind entity edu.matc.entity.Author on table author
[DEBUG] 2020-04-06 20:41:22.175 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.181 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-06 20:41:22.183 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Author:id]
[DEBUG] 2020-04-06 20:41:22.184 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-06 20:41:22.184 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2020-04-06 20:41:22.186 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-06 20:41:22.186 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2020-04-06 20:41:22.186 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.209 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.270 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.272 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.307 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-06 20:41:22.321 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2020-04-06 20:41:22.330 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2020-04-06 20:41:22.333 [http-nio-8080-exec-1] CollectionBinder - Collection role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:22.411 [http-nio-8080-exec-1] PropertyBinder - Building property books
[DEBUG] 2020-04-06 20:41:22.420 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.421 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-04-06 20:41:22.423 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Author:firstName]
[DEBUG] 2020-04-06 20:41:22.424 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-04-06 20:41:22.424 [http-nio-8080-exec-1] PropertyBinder - Building property firstName
[DEBUG] 2020-04-06 20:41:22.424 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-06 20:41:22.424 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-04-06 20:41:22.425 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Author:lastName]
[DEBUG] 2020-04-06 20:41:22.437 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-04-06 20:41:22.437 [http-nio-8080-exec-1] PropertyBinder - Building property lastName
[DEBUG] 2020-04-06 20:41:22.443 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-06 20:41:22.443 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2020-04-06 20:41:22.445 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for publicationYear
[DEBUG] 2020-04-06 20:41:22.463 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-06 20:41:22.465 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-06 20:41:22.465 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-04-06 20:41:22.465 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-04-06 20:41:22.528 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2020-04-06 20:41:22.529 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2020-04-06 20:41:22.529 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:22.533 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: edu.matc.entity.Author.books through a foreign key
[DEBUG] 2020-04-06 20:41:22.536 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: edu.matc.entity.Author.books -> book
[DEBUG] 2020-04-06 20:41:22.550 [http-nio-8080-exec-1] TableBinder - Retrieving property edu.matc.entity.Book.author
[DEBUG] 2020-04-06 20:41:22.552 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: author_id, one-to-many: edu.matc.entity.Book
[DEBUG] 2020-04-06 20:41:22.555 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.Author
[DEBUG] 2020-04-06 20:41:22.594 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.Author
[DEBUG] 2020-04-06 20:41:23.056 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2020-04-06 20:41:23.065 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2020-04-06 20:41:23.065 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-04-06 20:41:23.088 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-04-06 20:41:23.091 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2020-04-06 20:41:23.092 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-04-06 20:41:23.092 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2020-04-06 20:41:23.092 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-04-06 20:41:23.094 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-04-06 20:41:23.096 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-04-06 20:41:23.112 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2020-04-06 20:41:23.118 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-04-06 20:41:23.119 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2020-04-06 20:41:23.119 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-04-06 20:41:23.127 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-04-06 20:41:23.133 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-04-06 20:41:23.133 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-04-06 20:41:23.133 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2020-04-06 20:41:23.133 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2020-04-06 20:41:23.133 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2020-04-06 20:41:23.133 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2020-04-06 20:41:23.147 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2020-04-06 20:41:23.148 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2020-04-06 20:41:23.148 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-04-06 20:41:23.148 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-04-06 20:41:23.148 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-04-06 20:41:23.148 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-04-06 20:41:23.148 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2020-04-06 20:41:23.152 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-04-06 20:41:23.154 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2020-04-06 20:41:23.174 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2020-04-06 20:41:23.174 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-04-06 20:41:23.174 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2020-04-06 20:41:23.182 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-04-06 20:41:23.182 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-04-06 20:41:23.182 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2020-04-06 20:41:23.183 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-04-06 20:41:23.183 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2020-04-06 20:41:23.183 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2020-04-06 20:41:24.738 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-04-06 20:41:24.937 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-04-06 20:41:24.940 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-45-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookSeller, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_week-9-rest-exercise, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@31dc9755, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookSeller, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-04-06 20:41:25.228 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Author] is safe
[DEBUG] 2020-04-06 20:41:25.229 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Author
[DEBUG] 2020-04-06 20:41:25.511 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Book] is safe
[DEBUG] 2020-04-06 20:41:25.523 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Book
[DEBUG] 2020-04-06 20:41:25.584 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-04-06 20:41:25.586 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-04-06 20:41:25.586 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10f460cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9f1dd2e]
[DEBUG] 2020-04-06 20:41:26.521 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Author] is safe
[DEBUG] 2020-04-06 20:41:26.525 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Author
[DEBUG] 2020-04-06 20:41:26.883 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Author] is safe
[DEBUG] 2020-04-06 20:41:26.886 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Author
[DEBUG] 2020-04-06 20:41:29.163 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Book] is safe
[DEBUG] 2020-04-06 20:41:29.166 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Book
[DEBUG] 2020-04-06 20:41:29.175 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Book] is safe
[DEBUG] 2020-04-06 20:41:29.176 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Book
[DEBUG] 2020-04-06 20:41:29.554 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:29.554 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2020-04-06 20:41:29.554 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2020-04-06 20:41:29.558 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2020-04-06 20:41:29.559 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2020-04-06 20:41:29.616 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Author
[DEBUG] 2020-04-06 20:41:29.617 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2020-04-06 20:41:29.618 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select author_.id, author_.first_name as first_na2_0_, author_.last_name as last_nam3_0_ from author author_ where author_.id=?
[DEBUG] 2020-04-06 20:41:29.618 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into author (first_name, last_name, id) values (?, ?, ?)
[DEBUG] 2020-04-06 20:41:29.618 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update author set first_name=?, last_name=? where id=?
[DEBUG] 2020-04-06 20:41:29.618 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2020-04-06 20:41:29.618 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into author (first_name, last_name) values (?, ?)
[DEBUG] 2020-04-06 20:41:29.785 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bfe82da]
[DEBUG] 2020-04-06 20:41:29.809 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2020-04-06 20:41:29.835 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28b46534]
[DEBUG] 2020-04-06 20:41:29.845 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49de23e6]
[DEBUG] 2020-04-06 20:41:29.848 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2020-04-06 20:41:29.849 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2020-04-06 20:41:29.850 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2020-04-06 20:41:29.851 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books.publicationYear
[DEBUG] 2020-04-06 20:41:29.851 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2020-04-06 20:41:29.851 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-06 20:41:29.851 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-06 20:41:29.870 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:41:29.960 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:41:29.998 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Author)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Author, querySpaceUid=<gen:0>, path=edu.matc.entity.Author)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.Author.books, querySpaceUid=<gen:1>, path=edu.matc.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Book, querySpaceUid=<gen:2>, path=edu.matc.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2020-04-06 20:41:30.028 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:41:30.028 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14cc0a18]
[DEBUG] 2020-04-06 20:41:30.029 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2020-04-06 20:41:30.029 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2afca8e5]
[DEBUG] 2020-04-06 20:41:30.029 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d078eaa]
[DEBUG] 2020-04-06 20:41:30.030 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2020-04-06 20:41:30.030 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2020-04-06 20:41:30.030 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2020-04-06 20:41:30.030 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books.publicationYear
[DEBUG] 2020-04-06 20:41:30.030 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2020-04-06 20:41:30.030 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-06 20:41:30.031 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-06 20:41:30.031 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:41:30.031 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:41:30.032 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Author)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Author, querySpaceUid=<gen:0>, path=edu.matc.entity.Author)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.Author.books, querySpaceUid=<gen:1>, path=edu.matc.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Book, querySpaceUid=<gen:2>, path=edu.matc.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2020-04-06 20:41:30.032 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:41:30.153 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Author: select author0_.id as id1_0_1_, author0_.first_name as first_na2_0_1_, author0_.last_name as last_nam3_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.isbn as isbn2_1_0_, books1_.publication_year as publicat3_1_0_, books1_.title as title4_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:41:30.156 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Author: select author0_.id as id1_0_1_, author0_.first_name as first_na2_0_1_, author0_.last_name as last_nam3_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.isbn as isbn2_1_0_, books1_.publication_year as publicat3_1_0_, books1_.title as title4_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:41:30.157 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Book
[DEBUG] 2020-04-06 20:41:30.158 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2020-04-06 20:41:30.158 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.isbn as isbn2_1_, book_.publication_year as publicat3_1_, book_.title as title4_1_ from book book_ where book_.id=?
[DEBUG] 2020-04-06 20:41:30.158 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into book (author_id, isbn, publication_year, title, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-04-06 20:41:30.158 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update book set author_id=?, isbn=?, publication_year=?, title=? where id=?
[DEBUG] 2020-04-06 20:41:30.158 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2020-04-06 20:41:30.158 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into book (author_id, isbn, publication_year, title) values (?, ?, ?, ?)
[DEBUG] 2020-04-06 20:41:30.158 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec2982f]
[DEBUG] 2020-04-06 20:41:30.159 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-06 20:41:30.159 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83d9687]
[DEBUG] 2020-04-06 20:41:30.161 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2020-04-06 20:41:30.162 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2020-04-06 20:41:30.162 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2020-04-06 20:41:30.162 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2020-04-06 20:41:30.163 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2020-04-06 20:41:30.176 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationYear
[DEBUG] 2020-04-06 20:41:30.176 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-06 20:41:30.176 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:41:30.177 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:41:30.180 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Book)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Book, querySpaceUid=<gen:0>, path=edu.matc.entity.Book)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.Author, querySpaceUid=<gen:1>, path=edu.matc.entity.Book.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-04-06 20:41:30.180 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id where book0_.id=?
[DEBUG] 2020-04-06 20:41:30.181 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5980f909]
[DEBUG] 2020-04-06 20:41:30.182 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-06 20:41:30.182 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e1bcc9]
[DEBUG] 2020-04-06 20:41:30.182 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2020-04-06 20:41:30.182 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2020-04-06 20:41:30.183 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author.firstName
[DEBUG] 2020-04-06 20:41:30.183 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author.lastName
[DEBUG] 2020-04-06 20:41:30.183 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2020-04-06 20:41:30.183 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationYear
[DEBUG] 2020-04-06 20:41:30.187 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-06 20:41:30.193 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:41:30.199 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:41:30.213 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Book)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Book, querySpaceUid=<gen:0>, path=edu.matc.entity.Book)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.Author, querySpaceUid=<gen:1>, path=edu.matc.entity.Book.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-04-06 20:41:30.213 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id where book0_.id=?
[DEBUG] 2020-04-06 20:41:30.217 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2020-04-06 20:41:30.218 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2020-04-06 20:41:30.279 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b1be500]
[DEBUG] 2020-04-06 20:41:30.280 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd74f49]
[DEBUG] 2020-04-06 20:41:30.280 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-06 20:41:30.280 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2020-04-06 20:41:30.281 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2020-04-06 20:41:30.282 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationYear
[DEBUG] 2020-04-06 20:41:30.282 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-06 20:41:30.282 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-06 20:41:30.315 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-06 20:41:30.316 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.Author.books, querySpaceUid=<gen:0>, path=[edu.matc.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Book, querySpaceUid=<gen:1>, path=[edu.matc.entity.Author.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-04-06 20:41:30.338 [http-nio-8080-exec-1] CollectionLoader - Static select for collection edu.matc.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:41:30.775 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-04-06 20:41:30.776 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-04-06 20:41:30.778 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-04-06 20:41:30.860 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-04-06 20:41:30.861 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-04-06 20:41:30.863 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-04-06 20:41:30.864 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-04-06 20:41:30.888 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@409a8458
[DEBUG] 2020-04-06 20:41:30.896 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 250f8727-c5d1-44e0-ad20-c5e4b55db6f4 (<unnamed>)
[DEBUG] 2020-04-06 20:41:30.900 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-04-06 20:41:33.015 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-04-06 20:41:33.255 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2020-04-06 20:41:33.455 [http-nio-8080-exec-1] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@24d66a29
[DEBUG] 2020-04-06 20:41:33.763 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Author as generatedAlias0
[DEBUG] 2020-04-06 20:41:33.800 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:41:33.906 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-04-06 20:41:34.164 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-06 20:41:34.392 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : edu.matc.entity.Author (generatedAlias0) -> author0_
[DEBUG] 2020-04-06 20:41:34.420 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2020-04-06 20:41:34.437 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-06 20:41:34.446 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) )
[DEBUG] 2020-04-06 20:41:34.549 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2020-04-06 20:41:34.550 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-06 20:41:34.553 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=edu.matc.entity.Author}}

[DEBUG] 2020-04-06 20:41:34.572 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:41:34.637 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Author as generatedAlias0
[DEBUG] 2020-04-06 20:41:34.637 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2020-04-06 20:41:34.638 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:41:34.923 [http-nio-8080-exec-1] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2020-04-06 20:41:35.160 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-04-06 20:41:35.170 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:41:35.232 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2020-04-06 20:41:35.232 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:41:35.233 [http-nio-8080-exec-1] Loader - Result set row: 2
[DEBUG] 2020-04-06 20:41:35.233 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:41:35.254 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:41:35.256 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:41:35.256 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.345 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:41:35.347 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.347 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:41:35.347 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.371 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:41:35.371 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:41:35.372 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:41:35.372 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.372 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:41:35.372 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.372 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:41:35.374 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.375 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:41:35.375 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:41:35.375 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:41:35.375 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.375 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Joseph
[DEBUG] 2020-04-06 20:41:35.375 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.375 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Ottinger
[DEBUG] 2020-04-06 20:41:35.375 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.376 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:41:35.407 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:41:35.407 [http-nio-8080-exec-1] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:41:35.439 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:41:35.538 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:35.540 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:41:35.543 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:35.544 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:41:35.545 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:41:35.545 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:35.548 [http-nio-8080-exec-1] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:41:35.574 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:35.575 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:41:35.608 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:35.720 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:41:35.721 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:41:35.721 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.721 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:41:35.721 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.721 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:41:35.722 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.722 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:41:35.724 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.727 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:41:35.727 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:35.735 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:35.735 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:35.736 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:41:35.736 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:41:35.747 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:41:35.747 [http-nio-8080-exec-1] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:41:35.763 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:41:35.764 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:41:35.766 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:41:35.786 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:41:35.789 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:41:35.790 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:41:35.793 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:41:35.794 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.794 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:41:35.795 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.795 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:41:35.795 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.795 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:41:35.795 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.795 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:41:35.796 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:41:35.797 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:41:35.797 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.797 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:41:35.797 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.798 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:41:35.803 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.823 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:41:35.824 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:35.825 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:41:35.825 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:35.825 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:41:35.825 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:35.826 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:41:35.826 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:41:35.833 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:41:43.096 [http-nio-8080-exec-5] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:41:43.147 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:41:43.150 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:41:43.151 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:41:43.152 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:41:43.168 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:41:43.170 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:41:43.174 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:41:43.174 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:41:43.174 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.175 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:41:43.175 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.175 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:41:43.175 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.175 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:41:43.182 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:41:43.194 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:41:43.198 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.208 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:41:43.209 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.215 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:41:43.216 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.216 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:41:43.228 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.232 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:41:43.232 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:41:43.233 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:41:43.233 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.251 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:41:43.251 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.251 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:41:43.251 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.251 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:41:43.252 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:43.252 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:41:43.252 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:43.252 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:41:43.252 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:43.252 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:41:43.253 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#1
[DEBUG] 2020-04-06 20:41:43.253 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:41:47.108 [http-nio-8080-exec-4] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:41:47.150 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:41:47.166 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:41:47.186 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:47.192 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:41:47.193 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:41:47.195 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:47.200 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:41:47.200 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:47.200 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:41:47.200 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:47.200 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:41:47.200 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:41:47.200 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:41:47.200 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:47.201 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:47.202 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:41:47.214 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#2
[DEBUG] 2020-04-06 20:41:47.215 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:41:49.403 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:41:49.438 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:41:49.443 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:41:49.454 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:41:49.455 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:41:49.455 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:41:49.456 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:49.456 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Joseph
[DEBUG] 2020-04-06 20:41:49.456 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:49.456 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Ottinger
[DEBUG] 2020-04-06 20:41:49.456 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:49.456 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:41:49.456 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:49.461 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:41:49.461 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:49.462 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:41:49.463 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#3
[DEBUG] 2020-04-06 20:41:49.464 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:41:55.533 [http-nio-8080-exec-8] SQL - select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id where book0_.id=?
[DEBUG] 2020-04-06 20:41:55.595 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:41:55.600 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:41:55.610 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:41:55.610 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:41:55.611 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:55.615 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:41:55.616 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:55.616 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:41:55.616 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:55.616 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:41:55.616 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:55.617 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:41:55.617 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:41:55.632 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:41:55.632 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:55.632 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:41:55.632 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:55.633 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:41:55.633 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:41:55.638 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:41:55.643 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:41:55.644 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:55.658 [http-nio-8080-exec-8] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:41:55.676 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:55.683 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:41:55.686 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:55.709 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:55.709 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:41:55.709 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:41:55.709 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:41:55.710 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:41:55.710 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Book#3
[DEBUG] 2020-04-06 20:41:55.710 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:42:01.156 [http-nio-8080-exec-9] SQL - select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id where book0_.id=?
[DEBUG] 2020-04-06 20:42:01.180 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:42:01.180 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:42:01.181 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.184 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:42:01.185 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:42:01.185 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:42:01.186 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.187 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:42:01.187 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.187 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:42:01.187 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.188 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:42:01.200 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:42:01.201 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:01.208 [http-nio-8080-exec-9] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:42:01.238 [http-nio-8080-exec-9] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:01.248 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:42:01.260 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.261 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:42:01.262 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:01.271 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:42:01.272 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:42:01.272 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:01.272 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:42:01.280 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:42:01.281 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:42:01.281 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Book#2
[DEBUG] 2020-04-06 20:42:01.288 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:42:04.119 [http-nio-8080-exec-7] SQL - select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id where book0_.id=?
[DEBUG] 2020-04-06 20:42:04.144 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:42:04.152 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:42:04.158 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:42:04.160 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:42:04.160 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.165 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:42:04.165 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.165 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:42:04.165 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.166 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:42:04.166 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.166 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:42:04.166 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:42:04.167 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:42:04.167 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.168 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:42:04.168 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.168 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:42:04.168 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.168 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:42:04.169 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:42:04.170 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:04.170 [http-nio-8080-exec-7] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:42:04.190 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:04.191 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:42:04.201 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:04.203 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:42:04.204 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:04.204 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:42:04.204 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:42:04.205 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.222 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:42:04.223 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.223 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:42:04.223 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.223 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:42:04.223 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:04.229 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:42:04.229 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:42:04.233 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:04.233 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:42:04.233 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:42:04.233 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:42:04.234 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Book#1
[DEBUG] 2020-04-06 20:42:04.234 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:42:33.892 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2020-04-06 20:42:33.902 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Book as generatedAlias0
[DEBUG] 2020-04-06 20:42:33.923 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:42:33.933 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Book'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-04-06 20:42:33.933 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-06 20:42:33.934 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : edu.matc.entity.Book (generatedAlias0) -> book0_
[DEBUG] 2020-04-06 20:42:33.953 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2020-04-06 20:42:33.954 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-06 20:42:33.954 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) )
[DEBUG] 2020-04-06 20:42:33.954 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2020-04-06 20:42:33.959 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-06 20:42:33.967 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=edu.matc.entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i5_1_, book0_.isbn as isbn2_1_, book0_.publication_year as publicat3_1_, book0_.title as title4_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=edu.matc.entity.Book}}

[DEBUG] 2020-04-06 20:42:33.984 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:42:33.985 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Book as generatedAlias0
[DEBUG] 2020-04-06 20:42:33.985 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.isbn as isbn2_1_, book0_.publication_year as publicat3_1_, book0_.title as title4_1_ from book book0_
[DEBUG] 2020-04-06 20:42:33.985 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-06 20:42:33.995 [http-nio-8080-exec-1] SQL - select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.isbn as isbn2_1_, book0_.publication_year as publicat3_1_, book0_.title as title4_1_ from book book0_
[DEBUG] 2020-04-06 20:42:34.048 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-04-06 20:42:34.048 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:42:34.071 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2020-04-06 20:42:34.072 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:42:34.072 [http-nio-8080-exec-1] Loader - Result set row: 2
[DEBUG] 2020-04-06 20:42:34.072 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:42:34.095 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:42:34.096 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:42:34.115 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.123 [http-nio-8080-exec-1] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:42:34.173 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:42:34.187 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:42:34.201 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:34.221 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:42:34.222 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:42:34.244 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:34.251 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:42:34.251 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:42:34.251 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.251 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:42:34.251 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.251 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:42:34.260 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.269 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:42:34.270 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:42:34.286 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:42:34.287 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:42:34.305 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:42:34.305 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#1
[DEBUG] 2020-04-06 20:42:34.314 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:42:34.316 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.317 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:42:34.319 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.328 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:42:34.328 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.329 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:42:34.345 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.351 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:42:34.352 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:42:34.365 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:42:34.366 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.385 [http-nio-8080-exec-1] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:42:34.409 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:42:34.409 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:42:34.410 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:42:34.451 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:42:34.452 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:42:34.452 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.463 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:42:34.470 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.470 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:42:34.470 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.471 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:42:34.481 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:42:34.482 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:42:34.489 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:42:34.489 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:42:34.489 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#2
[DEBUG] 2020-04-06 20:42:34.489 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:42:34.490 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.490 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:42:34.490 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.490 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:42:34.519 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:42:34.520 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:42:34.540 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:43:13.474 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2020-04-06 20:43:13.480 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2020-04-06 20:43:13.502 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-04-06 20:43:13.503 [http-nio-8080-exec-3] Loader - Result row: EntityKey[edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:43:13.506 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2020-04-06 20:43:13.507 [http-nio-8080-exec-3] Loader - Result row: EntityKey[edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:43:13.507 [http-nio-8080-exec-3] Loader - Result set row: 2
[DEBUG] 2020-04-06 20:43:13.507 [http-nio-8080-exec-3] Loader - Result row: EntityKey[edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:43:13.507 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:43:13.507 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:43:13.507 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.508 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Joseph
[DEBUG] 2020-04-06 20:43:13.520 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.520 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Ottinger
[DEBUG] 2020-04-06 20:43:13.520 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.520 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:43:13.521 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:43:13.521 [http-nio-8080-exec-3] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:43:13.530 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:43:13.530 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:13.532 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:43:13.532 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:13.532 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:43:13.532 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:43:13.538 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:43:13.542 [http-nio-8080-exec-3] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:43:13.553 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:43:13.553 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:43:13.562 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:43:13.565 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:43:13.565 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:43:13.565 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.567 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:43:13.567 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.567 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:43:13.567 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.567 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:43:13.567 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.569 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:43:13.575 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:13.575 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:43:13.575 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:13.575 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:43:13.575 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:43:13.576 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:43:13.583 [http-nio-8080-exec-3] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:43:13.595 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:43:13.597 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:43:13.610 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:43:13.613 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:43:13.647 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:43:13.648 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:43:13.648 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:43:13.648 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:43:13.649 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.651 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:43:13.651 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.651 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:43:13.651 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.651 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:43:13.651 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:13.652 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:43:13.652 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:13.652 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:43:13.652 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:13.652 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:43:13.652 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:43:13.653 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:43:19.493 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0
[DEBUG] 2020-04-06 20:43:19.505 [http-nio-8080-exec-2] SQL - select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.isbn as isbn2_1_, book0_.publication_year as publicat3_1_, book0_.title as title4_1_ from book book0_
[DEBUG] 2020-04-06 20:43:19.543 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-04-06 20:43:19.554 [http-nio-8080-exec-2] Loader - Result row: EntityKey[edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:43:19.565 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-04-06 20:43:19.565 [http-nio-8080-exec-2] Loader - Result row: EntityKey[edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:43:19.576 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2020-04-06 20:43:19.576 [http-nio-8080-exec-2] Loader - Result row: EntityKey[edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:43:19.585 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:43:19.585 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:43:19.598 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.598 [http-nio-8080-exec-2] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:43:19.615 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:43:19.618 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:43:19.629 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:43:19.631 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:43:19.641 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:43:19.646 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:43:19.648 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:43:19.648 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:43:19.648 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.648 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:43:19.648 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.648 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:43:19.649 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.649 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:43:19.657 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:19.658 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:43:19.658 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#1
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.665 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:43:19.666 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:43:19.666 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:43:19.674 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.679 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:43:19.679 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.679 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:43:19.679 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.679 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:43:19.685 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.686 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:43:19.691 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:43:19.691 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:43:19.691 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.691 [http-nio-8080-exec-2] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:43:19.700 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:43:19.700 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:43:19.701 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:43:19.715 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:43:19.715 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:43:19.715 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.715 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:43:19.716 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.716 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:43:19.716 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.716 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:43:19.716 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:19.723 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:43:19.723 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:43:19.723 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:43:19.723 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#2
[DEBUG] 2020-04-06 20:43:19.723 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:43:19.723 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.724 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:43:19.724 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.724 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:43:19.741 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:43:19.745 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:43:19.749 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:44:14.150 [http-nio-8080-exec-7] SQL - select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.isbn as isbn2_1_0_, book0_.publication_year as publicat3_1_0_, book0_.title as title4_1_0_, author1_.id as id1_0_1_, author1_.first_name as first_na2_0_1_, author1_.last_name as last_nam3_0_1_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id where book0_.id=?
[DEBUG] 2020-04-06 20:44:14.169 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:44:14.169 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:44:14.177 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:44:14.177 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:44:14.178 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:44:14.183 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.184 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:44:14.184 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.184 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:44:14.184 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.184 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:44:14.184 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:44:14.186 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:14.186 [http-nio-8080-exec-7] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:44:14.196 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:14.202 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:44:14.206 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:14.209 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:44:14.210 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:14.212 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:44:14.212 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:44:14.213 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:14.213 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:44:14.217 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:44:14.217 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:44:14.217 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Book#1
[DEBUG] 2020-04-06 20:44:14.217 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:44:47.279 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2020-04-06 20:44:47.281 [http-nio-8080-exec-1] SQL - select author0_.id as id1_0_, author0_.first_name as first_na2_0_, author0_.last_name as last_nam3_0_ from author author0_
[DEBUG] 2020-04-06 20:44:47.294 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-04-06 20:44:47.294 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:44:47.295 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2020-04-06 20:44:47.295 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:44:47.295 [http-nio-8080-exec-1] Loader - Result set row: 2
[DEBUG] 2020-04-06 20:44:47.295 [http-nio-8080-exec-1] Loader - Result row: EntityKey[edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:44:47.296 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:44:47.296 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:44:47.296 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.297 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Kathy
[DEBUG] 2020-04-06 20:44:47.297 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.301 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Sierra
[DEBUG] 2020-04-06 20:44:47.306 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.311 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#1]
[DEBUG] 2020-04-06 20:44:47.311 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:44:47.311 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:44:47.311 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.313 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:44:47.314 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.314 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:44:47.314 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.314 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:44:47.317 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:44:47.317 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:44:47.317 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.318 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Joseph
[DEBUG] 2020-04-06 20:44:47.319 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.319 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Ottinger
[DEBUG] 2020-04-06 20:44:47.319 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.325 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#3]
[DEBUG] 2020-04-06 20:44:47.331 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:44:47.331 [http-nio-8080-exec-1] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:44:47.335 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:44:47.337 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:44:47.338 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#3]
[DEBUG] 2020-04-06 20:44:47.338 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:44:47.338 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:44:47.338 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:44:47.341 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:44:47.343 [http-nio-8080-exec-1] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:44:47.349 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:44:47.349 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:44:47.356 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:44:47.357 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:44:47.357 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:44:47.357 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.357 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:44:47.359 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.359 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:44:47.359 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.360 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:44:47.360 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.361 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:44:47.361 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:44:47.361 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:44:47.361 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:44:47.362 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:44:47.363 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:44:47.367 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:47.367 [http-nio-8080-exec-1] SQL - select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.isbn as isbn2_1_1_, books0_.publication_year as publicat3_1_1_, books0_.title as title4_1_1_ from book books0_ where books0_.author_id=?
[DEBUG] 2020-04-06 20:44:47.391 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:47.391 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:44:47.394 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:47.401 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-06 20:44:47.412 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:47.418 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:44:47.418 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:44:47.418 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.418 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0596009205
[DEBUG] 2020-04-06 20:44:47.418 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2005
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Head First Java, 2nd Edition
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#1]
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `isbn` : value = 978-1-4842-2319-2
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2016
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Beginning Hibernate
[DEBUG] 2020-04-06 20:44:47.419 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:44:47.426 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#2]
[DEBUG] 2020-04-06 20:44:47.427 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:44:47.427 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#1]
[DEBUG] 2020-04-06 20:44:47.427 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:44:47.427 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:44:47.430 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-06 20:44:47.430 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-06 20:45:11.252 [http-nio-8080-exec-4] SQL - select author0_.id as id1_0_0_, author0_.first_name as first_na2_0_0_, author0_.last_name as last_nam3_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.isbn as isbn2_1_2_, books1_.publication_year as publicat3_1_2_, books1_.title as title4_1_2_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2020-04-06 20:45:11.261 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-06 20:45:11.261 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-06 20:45:11.264 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Herbert
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Schilt
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Author#2]
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `isbn` : value = 978-0071809252
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `publicationYear` : value = 2014
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`publicationYear`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Java: A Beginner’s Guide (Sixth Edition)
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Book#3]
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.Author.books#2]
[DEBUG] 2020-04-06 20:45:11.266 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.Author.books
[DEBUG] 2020-04-06 20:45:11.267 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-06 20:45:11.267 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Author#2
[DEBUG] 2020-04-06 20:45:11.267 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
